/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.nus.iss.pos.gui;

import edu.nus.iss.pos.core.Transaction;
import edu.nus.iss.pos.core.TransactionDetail;
import edu.nus.iss.pos.core.services.ISalesService;
import edu.nus.iss.pos.dao.repositories.UnitOfWork;
import edu.nus.iss.pos.services.SalesService;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collection;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComponent;
import javax.swing.JPanel;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import org.jdatepicker.JDateComponentFactory;
import org.jdatepicker.JDatePicker;

/**
 *
 * @author Liu Zhenchang
 */
public class TransactionReport extends CustomedFrame {
    
    private TransactionTableModel model = null;
    private List<TransactionDetail> details = null;
    private ISalesService saleService = null;
    
    /**
     * Creates new form TransactionReport2
     * @throws java.lang.Exception
     */
    TransactionReport(ISalesService saleService) throws Exception {
        super();
        initComponents();
        this.saleService = saleService;
        details = new ArrayList();
        Calendar c = Calendar.getInstance();
        Date end = c.getTime();
        c.set(Calendar.DAY_OF_MONTH, c.get(Calendar.DAY_OF_MONTH)-30);
        Date start = c.getTime();
        List<Transaction> transactions = saleService.getTransactions(start, end);
        for(Transaction trans : transactions) {
            details.addAll((Collection<? extends TransactionDetail>) trans.getTransactionDetails());
        }        
        model = new TransactionTableModel(details);
        table.setModel(model);
    
        
        table.setAutoCreateRowSorter(true);
        TableRowSorter<TableModel> sorter = new TableRowSorter(table.getModel());
        table.setRowSorter(sorter);
        
        List<RowSorter.SortKey> sortKeys = new ArrayList<>();
        int columnIndexToSort = 1;
        sortKeys.add(new RowSorter.SortKey(columnIndexToSort, SortOrder.ASCENDING));
        sorter.setSortKeys(sortKeys);
        sorter.sort();
        
        JDatePicker picker = new JDateComponentFactory().createJDatePicker();
        JDatePicker picker2 = new JDateComponentFactory().createJDatePicker();
        JPanel datePanel = new JPanel();
        JPanel datePanel2 = new JPanel();
        datePanel.add((JComponent)picker);
        datePanel2.add((JComponent)picker2);
        startDatePanel.setLayout(new BorderLayout());
        endDatePanel.setLayout(new BorderLayout());
        startDatePanel.add(datePanel);
        endDatePanel.add(datePanel2);
        
        queryBtn.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                details = new ArrayList();
                Calendar ca = (Calendar) picker.getModel().getValue();
                Date startDate = ca.getTime();
                ca = (Calendar) picker2.getModel().getValue();
                Date endDate = ca.getTime();
                List<Transaction> transactions = null;
                try {
                    transactions = saleService.getTransactions(startDate, endDate);
                } catch (Exception ex) {
                    Logger.getLogger(TransactionReport.class.getName()).log(Level.SEVERE, null, ex);
                }
                for(Transaction trans : transactions) {
                    details.addAll((Collection<? extends TransactionDetail>) trans.getTransactionDetails());
                }
                model = new TransactionTableModel(details);
                table.setModel(model);
                ((TableRowSorter)table.getRowSorter()).sort();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        startDatePanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        endDatePanel = new javax.swing.JPanel();
        queryBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        setTitle("Transaction Report");

        jLabel1.setText("Start date:");

        javax.swing.GroupLayout startDatePanelLayout = new javax.swing.GroupLayout(startDatePanel);
        startDatePanel.setLayout(startDatePanelLayout);
        startDatePanelLayout.setHorizontalGroup(
            startDatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 104, Short.MAX_VALUE)
        );
        startDatePanelLayout.setVerticalGroup(
            startDatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );

        jLabel2.setText("End date:");

        javax.swing.GroupLayout endDatePanelLayout = new javax.swing.GroupLayout(endDatePanel);
        endDatePanel.setLayout(endDatePanelLayout);
        endDatePanelLayout.setHorizontalGroup(
            endDatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 104, Short.MAX_VALUE)
        );
        endDatePanelLayout.setVerticalGroup(
            endDatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );

        queryBtn.setText("Query");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(startDatePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(endDatePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(queryBtn)
                .addContainerGap(464, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel2});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {endDatePanel, startDatePanel});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1)
                    .addComponent(startDatePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addComponent(endDatePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(queryBtn)))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, jLabel2});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {endDatePanel, startDatePanel});

        jScrollPane2.setViewportView(table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    class TransactionTableModel extends AbstractTableModel {
        
        private List<TransactionDetail> details = null;
        private final String[] columns = {"Transaction id", "Product id", "Product name", "Description", "Customer", "Quantity purchased", "Date"};
        
        public TransactionTableModel(List<TransactionDetail> details){
            super();
            this.details = details;
        }
        
        @Override
        public String getColumnName(int column) {
            return columns[column];
        }
        
        @Override
        public int getRowCount() {
            return details.size();
        }

        @Override
        public int getColumnCount() {
            return columns.length;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            TransactionDetail detail = details.get(rowIndex);
            switch(columnIndex){
                case 0:
                    return detail.getTransaction().getKey();
                case 1:
                    return detail.getProduct().getKey();
                case 2:
                    return detail.getProduct().getName();
                case 3:
                    return detail.getProduct().getDescription();
                case 4:
                    return detail.getTransaction().getCustomer().getKey();
                case 5:
                    return detail.getQuantityPurchased();
                default:
                    SimpleDateFormat dateFormatter = new SimpleDateFormat("yyyy-MM-dd");
                    Date date = detail.getTransaction().getDate();
                    return dateFormatter.format(date);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel endDatePanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton queryBtn;
    private javax.swing.JPanel startDatePanel;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
